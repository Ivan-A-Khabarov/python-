# ‚û¢ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤: —É–±–µ–¥–∏—Ç—å—Å—è, —á—Ç–æ –Ω–æ–≤—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ—Ö–æ–¥—è—Ç
# –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ–∞–π–ª —Å –∫–æ–¥–æ–º –¥–∞–∂–µ –Ω–µ –≤–∫–ª—é—á–∞—è —Ä–µ–∂–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è verbose. –ò –ø–æ–ª—É—á–∞–µ–º
# –æ–≥—Ä–æ–º–Ω—ã–π —Å–ø–∏—Å–æ–∫ –æ—à–∏–±–æ–∫ –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—â–∏–π—Å—è —Å–ª–µ–¥—É—é—â–∏–º –∏—Ç–æ–≥–æ–º:
# *****************************************************************
# *****
# 1 items had failures:
# 5 of 7 in __main__.is_prime
# ***Test Failed*** 5 failures.
# –õ–æ–≥–∏—á–Ω–æ –ø—Ä–æ–≤–∞–ª–∏—Ç—å 5 –Ω–æ–≤—ã—Ö —Ç–µ—Å—Ç–æ–≤, –≤–µ–¥—å –º—ã –ø–æ–∫–∞ –Ω–µ –ø–∏—Å–∞–ª–∏ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª–∏—Ç
# –∏—Ö –ø—Ä–æ–π—Ç–∏.

# üî• –í–∞–∂–Ω–æ! –¢–∞–∫ –∫–∞–∫ doctest —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç, –≤—ã–∑–æ–≤ –æ—à–∏–±–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä —á–µ—Ä–µ–∑
# raise –∏ –ø–µ—á–∞—Ç—å –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ —á–µ—Ä–µ–∑ print() –±—É–¥—É—Ç –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞—Ç—å—Å—è
# –æ–¥–∏–Ω–∞–∫–æ–≤–æ.

def is_prime(p: int) -> bool:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á–∏—Å–ª–æ P –Ω–∞ –ø—Ä–æ—Å—Ç–æ—Ç—É –ø—É—Ç–µ–º –ø–æ–∏—Å–∫–∞ –æ—Å—Ç–∞—Ç–∫–∞ –æ—Ç –¥–µ–ª–µ–Ω–∏—è –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ [2, P).

    >>> is_prime(42)
    False
    >>> is_prime(73)
    True
    >>> is_prime(3.14)
    Traceback (most recent call last):
        ...
    TypeError: –ß–∏—Å–ª–æ P –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª–æ–≥–æ —Ç–∏–ø–∞
    >>> is_prime(-100)
    Traceback (most recent call last):
        ...
    ValueError: –ß–∏—Å–ª–æ P –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 1
    >>> is_prime(1)
    Traceback (most recent call last):
        ...
    ValueError: –ß–∏—Å–ª–æ P –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 1
    >>> is_prime(100_000_001)
    –ï—Å–ª–∏ —á–∏—Å–ª–æ P —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ—Å—Ç—ã–º, –ø—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.
    –†–∞–±–æ—Ç–∞–µ—Ç...
    False
    >>> is_prime(100_000_007)
    –ï—Å–ª–∏ —á–∏—Å–ª–æ P —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ—Å—Ç—ã–º, –ø—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏.
    –†–∞–±–æ—Ç–∞–µ—Ç...
    True
    """
    if not isinstance(p, int):
        raise TypeError('–ß–∏—Å–ª–æ P –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª–æ–≥–æ —Ç–∏–ø–∞')
    elif p <= 1 or p < 0:
        raise ValueError('–ß–∏—Å–ª–æ P –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–æ–ª—å—à–µ 1')
    elif p > 100_000_000:
        print('–ï—Å–ª–∏ —á–∏—Å–ª–æ P —è–≤–ª—è–µ—Ç—Å—è –ø—Ä–æ—Å—Ç—ã–º, –ø—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –º–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏. –†–∞–±–æ—Ç–∞–µ–º...')
        for i in range(2, p):
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–ª–∏–º–æ—Å—Ç–∏ –Ω–∞ –≤—Å–µ —á–∏—Å–ª–∞ –æ—Ç 2 –¥–æ p-1
            if p % i == 0:
                return False
        return True


if __name__ == '__main__':
    import doctest

    doctest.testmod(verbose=True)