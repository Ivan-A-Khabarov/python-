# –ü–æ–ø—ã—Ç–∫–∞ –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ –ø—Ä–∏–≤–µ–ª–∞ –∫
# –∏–∑–º–µ–Ω–µ–Ω–∏—é –æ–¥–Ω–æ–∏–º—ë–Ω–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –≤–Ω–µ —Ñ—É–Ω–∫—Ü–∏–∏. –ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ–± –æ–±–ª–∞—Å—Ç—è—Ö
# –≤–∏–¥–∏–º–æ—Å—Ç–∏ –¥–∞–ª–µ–µ –≤ –ª–µ–∫—Ü–∏–∏.
# –ê –ø–æ–∫–∞ –ø—Ä–∏–º–µ—Ä —Ä–∞–±–æ—Ç—ã —Å –∏–∑–º–µ–Ω—è–µ–º—ã–º–∏ –æ–±—ä–µ–∫—Ç–∞–º–∏.

def mutable(data: list[int]) -> list[int]:
    for i, item in enumerate(data):
        data[i] = item + 1
    print(f'In func {data = }')
    return data

my_list = [2, 4, 6, 8]
print(f'In main {my_list = }')
new_list = mutable(my_list)
print(f'{my_list = }\t{new_list = }')

# –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–∏–≤–µ–ª–æ –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—é —Å–ø–∏—Å–∫–∞ –≤–Ω–µ —Ñ—É–Ω–∫—Ü–∏–∏.
# üî• –í–∞–∂–Ω–æ! –í Python –∞—Ä–≥—É–º–µ–Ω—Ç—ã –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∞
# –æ–±—ä–µ–∫—Ç. –°–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ, –∏–∑–º–µ–Ω—è–µ–º—ã–π –æ–±—ä–µ–∫—Ç –º–æ–∂–Ω–æ –ø–æ–º–µ–Ω—è—Ç—å. –ê –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ
# –∏–∑–º–µ–Ω–∏—Ç—å –Ω–µ–∏–∑–º–µ–Ω—è–µ–º—ã–π —Å–æ–∑–¥–∞–¥–∏–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –ª–∏–±–æ –ø–æ–ª—É—á–∏–º –æ—à–∏–±–∫—É.
